#!/bin/bash

DIRECTORY='.git/tmp-diffs'

branch=`git rev-parse --abbrev-ref HEAD`
tag_prefix="$(echo $branch | head -c 1)*" # todo assume starting number is a single character
if [ $# -eq 1 ]; then
  tag_prefix=$1
fi

echo "Grabbing tags following pattern $tag_prefix..."
tags=(`git log --reverse --pretty=%d --tags=$tag_prefix --no-walk | sed 's/ (tag: //' | sed 's/)//'`)

# pull out first tag and remove it from $tags as it will be used as base
tags_first=${tags[0]}
tags=${tags[@]:1}
echo "Using $tags_first as base."

# create patch files for each tag
mkdir $DIRECTORY
previous=$tags_first
for tag in $tags;
do
  echo "Squashing $tag..."
  git diff --full-index --binary $previous $tag > .git/tmp-diffs/$tag.diff
  previous=$tag
done

echo "Create new branch for squashed commits: $branch-squash..."

function commitAll {
  sleep 0.2 # seems filesytem can be behind and add call will not see updates
  git add --all .
  git commit -m "Squashed $tag"
}

# checkout base tag, create new branch, flush git history, and commit base files
git checkout $tags_first
git symbolic-ref HEAD refs/heads/$branch-squash
rm .git/index
tag=$tags_first; commitAll
git clean -fdx

# apply tag diffs and commit
for tag in $tags;
do
  echo "Applying $tag..."
  git apply --whitespace=nowarn .git/tmp-diffs/$tag.diff
  commitAll
done

rm -rf $DIRECTORY
